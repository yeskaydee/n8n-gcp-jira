{
  "name": "Jira GCP IAM Validator",
  "nodes": [
    {
      "parameters": {
        "events": [
          "jira:issue_updated"
        ],
        "additionalFields": {
          "filter": "status = \"Verification\""
        }
      },
      "type": "n8n-nodes-base.jiraTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "0ecc5c49-b7fd-4001-9392-21974631e70f",
      "name": "Jira Trigger",
      "webhookId": "d5e2e48d-fded-46a7-86f2-670192fd4dcd",
      "credentials": {
        "jiraSoftwareCloudApi": {
          "id": "OOTddAMhVRwPi5lp",
          "name": "Jira SW Cloud account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "issueKey": "={{ $json.issue.key }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.jira",
      "typeVersion": 1,
      "position": [
        208,
        0
      ],
      "id": "2065b3d5-5237-409c-9a60-e740b25842f4",
      "name": "Get an issue",
      "credentials": {
        "jiraSoftwareCloudApi": {
          "id": "OOTddAMhVRwPi5lp",
          "name": "Jira SW Cloud account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "28bf8e35-3fda-482e-9d76-b6a252e1eb38",
              "leftValue": "={{ $json.candidates[0].content.parts[0].text }}",
              "rightValue": "=True",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1424,
        0
      ],
      "id": "3d396cae-bb45-4195-8108-787e1776b373",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "update",
        "issueKey": "={{ $('Get an issue').item.json.key }}",
        "updateFields": {
          "statusId": {
            "__rl": true,
            "value": "4",
            "mode": "list",
            "cachedResultName": "n8n validates"
          }
        }
      },
      "type": "n8n-nodes-base.jira",
      "typeVersion": 1,
      "position": [
        1632,
        -128
      ],
      "id": "56ae9a12-40c6-4bdb-ae20-f416e66d543f",
      "name": "Update ticket status (Success)",
      "credentials": {
        "jiraSoftwareCloudApi": {
          "id": "OOTddAMhVRwPi5lp",
          "name": "Jira SW Cloud account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "issueKey": "={{ $('Get an issue').item.json.key }}",
        "updateFields": {
          "statusId": {
            "__rl": true,
            "value": "5",
            "mode": "list",
            "cachedResultName": "Retry"
          }
        }
      },
      "type": "n8n-nodes-base.jira",
      "typeVersion": 1,
      "position": [
        1632,
        128
      ],
      "id": "f1afc823-a68b-4128-a6b2-0e0ca9922eb1",
      "name": "Update Ticket Status (Failure)",
      "credentials": {
        "jiraSoftwareCloudApi": {
          "id": "OOTddAMhVRwPi5lp",
          "name": "Jira SW Cloud account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent?key=GEMINIAISTUDIOKEY",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "JSON",
        "body": "={   \"contents\": [     {       \"parts\": [         {           \"text\": \"You are a JSON extractor.\\n\\nExtract action to be performed , permission, email, and in which project from this Jira ticket and return only JSON.\n\\n\\nTicket:\\nTitle: {{$json['fields']['summary']}}\\nSummary: {{$json['fields']['description']}}\"         }       ]     }   ] }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        416,
        0
      ],
      "id": "183a4a11-33b0-4aea-85c7-86db5176c444",
      "name": "JSON Extractor from Ticket"
    },
    {
      "parameters": {
        "jsCode": "// Extract the text from Gemini response\nconst text = $json[\"candidates\"][0][\"content\"][\"parts\"][0][\"text\"];\n\n// Remove code block markers if present\nconst cleaned = text.replace(/```json\\s*|```/g, \"\").trim();\n\n// Parse JSON safely\ntry {\n    const parsed = JSON.parse(cleaned);\n    return [{ json: parsed }];\n} catch (err) {\n    throw new Error(\"Failed to parse Gemini output: \" + cleaned);\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        624,
        0
      ],
      "id": "9be1275a-7f74-4b44-b005-817341c90f3e",
      "name": "JSON Cleanup"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://cloudresourcemanager.googleapis.com/v1/projects/{{$json.project}}:getIamPolicy",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleOAuth2Api",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "JSON",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        864,
        0
      ],
      "id": "c8e851c8-15a0-4f2b-80b6-fd9c787ba3ac",
      "name": "Get IAM Policy",
      "credentials": {
        "googleOAuth2Api": {
          "id": "5xOy4QBcmEC9I5Dm",
          "name": "Google account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent?key=GEMINIAISTUDIOKEY",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "JSON",
        "body": "={   \"contents\": [     {       \"parts\": [         {           \"text\": \"You are a IAM Permission validator.\nCheck if the {{ $('JSON Cleanup').item.json.action }} {{ $('JSON Cleanup').item.json.permission }}was done for {{ $('JSON Cleanup').item.json.email }} in project {{ $('JSON Cleanup').item.json.project }} by checking the complete IAM list of the project: {{ $json.bindings.map(x => `${x.role}: ${x.members.join(', ')}`).join('\\n') }}\n....and give the output as True or False\n\"         }       ]     }   ] }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1120,
        0
      ],
      "id": "0eabf073-e48b-422d-be6e-c513e254093f",
      "name": "IAM Validator"
    }
  ],
  "pinData": {},
  "connections": {
    "Jira Trigger": {
      "main": [
        [
          {
            "node": "Get an issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get an issue": {
      "main": [
        [
          {
            "node": "JSON Extractor from Ticket",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Update ticket status (Success)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Ticket Status (Failure)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON Extractor from Ticket": {
      "main": [
        [
          {
            "node": "JSON Cleanup",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON Cleanup": {
      "main": [
        [
          {
            "node": "Get IAM Policy",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get IAM Policy": {
      "main": [
        [
          {
            "node": "IAM Validator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IAM Validator": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8d958bd7-4dac-4fcd-88fe-4c579c270d0e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "4a1edfe949790127b4a3203f14e018d671fd7a08daf930b1a2958def8bfdd78d"
  },
  "id": "l06gF1cMOLz32SIB",
  "tags": []
}
